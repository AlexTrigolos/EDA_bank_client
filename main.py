import streamlit as st
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt

st.write("# Работа Триголос Алексея с данными о клиентах банка.")

# Загрузка данных
clients = pd.read_csv('clients.csv')

feature = st.selectbox('Построить график по признаку:', clients.columns)
fig_hist, ax_hist = plt.subplots()
ax_hist.hist(clients[feature], bins=min(clients[feature].max() - clients[feature].min() + 1, 1000))
st.pyplot(fig_hist)

st.write('Отобразим корреляцию признаков между собой и с таргетом.')

fig_heatmap, ax_heatmap = plt.subplots()
sns.heatmap(clients.corr(), ax=ax_heatmap, annot=True, fmt=".2f")
st.write(fig_heatmap)

st.write('Видим, что с таргетом практически никакой признак особо не коррелирует. Наибольшая связь с возрастом (но '
         'всего 0.1), чуть меньше влияет дохо, затем рабочий/пенсионер, кредиты и так далее до идентификатора, '
         'что вполне логично. Если смотреть на остальные, то всё вполне логично. Число закрытых кредитов кореелирует '
         'с их наличием, работник с пенсионером, ведь пенсионеры не работают, хотя странно почему не значение -1, '
         'видимо некоторые и работают и пенсионеры, а некоторые ни то, ни то. Возраст коррелирует с работой или '
         'пенсией и количество детей коррелирует с числом иждивенцев. Странно, что большая корелляция у '
         'идентификатора и кредитов, но видимо это обусловлено тем, что более ранние клиенты имеют более близкие '
         'идентификаторы и у них было больше возможности взять кредит и отдать его. И еще интересное, '
         'что пол коррелирует на четверть с зароботком. А так много чего еще интереного можно увидеть)')

st.write('### Дале посмотрим на зависимость целевой переменной от признака.')
st.write('Каждый график строится с разделением по отклику или нет и с разделением на значения внутри признака. Кроме '
         'того круг увеличивается если людей с таким признаком и таргетом становится больше и уменьшается если '
         'возрастает количество людей с таким признаком и противоположным таргетом. Расположил графики в порядке '
         'убывания корреляции с таргетом, лишние селекты можете удалить.')

default_scatter_columns = [
    'AGE', 'PERSONAL_INCOME', 'SOCSTATUS_WORK_FL', 'SOCSTATUS_PENS_FL', 'LOAN_NUM_CLOSED', 'LOAN_NUM_TOTAL',
    'DEPENDANTS', 'GENDER', 'CHILD_TOTAL', 'AGREEMENT_RK'
]
scatter_txt = 'Выберите признаки для которых отобразится их зависисмость от целевой переменной'

feature_variables = st.multiselect(scatter_txt, clients.drop('TARGET', axis=1).columns, default=default_scatter_columns)
for multy_feature in feature_variables:  # проходимся по каждой колонки датафрейма
    fig_scatter, ax_scatter = plt.subplots()  # создаем новый график для каждой колонки
    # создаем новый датафрейм в котором будут подсчитаны число повторений сочетания нашего признака и целевой переменной
    feature_data = pd.DataFrame(clients[[multy_feature, 'TARGET']].value_counts()).reset_index()
    # потом подсчитываем общее число такого признака при любой целевой переменной
    feature_counts = feature_data.groupby(multy_feature)["count"].sum()
    # затем создаем датафрейм размеров, в котором количество нашего признакак и таргета делится на число всех таких
    # признаков, после чего домножаем для лучшей наглядности
    sizes = feature_data['count'].div(feature_counts[feature_data[multy_feature]].reset_index()['count']) * 100
    ax_scatter.scatter(feature_data[multy_feature], feature_data['TARGET'], s=sizes)  # отображаем данные
    # и добавляем подписи
    ax_scatter.set_xlabel(multy_feature)
    ax_scatter.set_ylabel('TARGET')
    ax_scatter.set_title(f'Зависимость TARGET от {multy_feature}')
    st.pyplot(fig_scatter)

st.write('Как и показала корреляция, на графиках можно заметить слабые зависимости. Например: более взрослые реже '
         'имеют положительный таргет, с признаком PERSONAL_INCOME сложно понять, но корреляция выдала небольшую '
         'положительнуя связь, видимо всё же больше откликаются с большим доходом, дальше видно, что работающие '
         'откликаются чуть чаще, чем пенсионеры, по кредитам тоже неоднозначно, процент отклика буд-то лучше у тех у '
         'кого их 8 (в том числе закрытых), но среди тех у кого 7 закрытых отклик плохой. Дальше видно, словно чаще '
         'таргет был 1 при условии наличия именно 5 иждивенцев, по полу я не заметил большой разницы. При 10 детях '
         'чаще откликались, хотя при 7 и 8 вообще не было откликов. Ну и последний идентификатор, как и ожидалось не '
         'влияет.')

st.write('Дальше посмотрим на числовые характеристики')
st.write(clients.describe(include='all'))
